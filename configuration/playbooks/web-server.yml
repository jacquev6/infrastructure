- hosts: web_server
  become: yes
  gather_facts: no
  tasks:
    - ansible.builtin.apt:
        update_cache: true
        name:
          - docker.io
          - docker-compose
        state: present
    - ansible.builtin.user:
        name: ubuntu
        groups:
          - docker
        append: true

- hosts: web_server
  become: no
  gather_facts: no
  tasks:
    - ansible.builtin.file:
        path: web-server
        state: directory
    - ansible.builtin.file:
        path: web-server/conf.d
        state: directory
    - ansible.builtin.copy:
        dest: web-server/docker-compose.yml
        content: |
          services:
            fanout:
              image: jonasal/nginx-certbot:4-alpine
              ports:
                - "80:80"
                - "443:443"
              volumes:
                - ./50-copy-conf.sh:/docker-entrypoint.d/50-copy-conf.sh:ro
                - ./conf.d:/etc/nginx/conf.d.ro
                - ./letsencrypt:/etc/letsencrypt
              environment:
                - CERTBOT_EMAIL=letsencrypt.org@vincent-jacques.net
            draw-turks-head-demo:
              image: jacquev6/draw-turks-head-demo:20230310-150439
            gabby-demo:
              image: jacquev6/gabby-frontend:20240115-100114
    - ansible.builtin.copy:
        dest: web-server/50-copy-conf.sh
        content: |
          cp /etc/nginx/conf.d.ro/* /etc/nginx/conf.d/
        mode: "0755"
# @todo Use a trigger to reload the NGinx config changes
# In the mean time, run this after changing the NGinx config files:
#   ansible --inventory inventory.yml web_server -a 'bash -c "cd web-server; docker-compose up --force-recreate --detach"'
# (Just reloading config changes with `docker-compose exec fanout nginx -s reload` isn't enough when adding a new SSL domain
# because certificates are emitted during startup)
    - ansible.builtin.copy:
        dest: web-server/conf.d/www.jacquev6.net.conf
        content: |
          server {
            listen 443 ssl;
            server_name www.jacquev6.net;

            ssl_certificate /etc/letsencrypt/live/www.jacquev6.net/fullchain.pem;
            ssl_certificate_key /etc/letsencrypt/live/www.jacquev6.net/privkey.pem;
            ssl_trusted_certificate /etc/letsencrypt/live/www.jacquev6.net/chain.pem;

            return 301 https://jacquev6.net$request_uri;
          }
    - ansible.builtin.copy:
        dest: web-server/conf.d/cloud.jacquev6.net.conf
        content: |
          server {
            listen 443 ssl;
            server_name cloud.jacquev6.net;

            ssl_certificate /etc/letsencrypt/live/cloud.jacquev6.net/fullchain.pem;
            ssl_certificate_key /etc/letsencrypt/live/cloud.jacquev6.net/privkey.pem;
            ssl_trusted_certificate /etc/letsencrypt/live/cloud.jacquev6.net/chain.pem;

            location / {
              default_type text/plain;
              return 200 'OK';
            }
          }
    - ansible.builtin.copy:
        dest: web-server/conf.d/www.vincent-jacques.net.conf
        content: |
          server {
            listen 443 ssl;
            server_name www.vincent-jacques.net;

            ssl_certificate /etc/letsencrypt/live/www.vincent-jacques.net/fullchain.pem;
            ssl_certificate_key /etc/letsencrypt/live/www.vincent-jacques.net/privkey.pem;
            ssl_trusted_certificate /etc/letsencrypt/live/www.vincent-jacques.net/chain.pem;

            return 301 https://vincent-jacques.net$request_uri;
          }
    - ansible.builtin.copy:
        dest: web-server/conf.d/dyn.vincent-jacques.net.conf
        content: |
          server {
            listen 443 ssl;
            server_name dyn.vincent-jacques.net;

            ssl_certificate /etc/letsencrypt/live/dyn.vincent-jacques.net/fullchain.pem;
            ssl_certificate_key /etc/letsencrypt/live/dyn.vincent-jacques.net/privkey.pem;
            ssl_trusted_certificate /etc/letsencrypt/live/dyn.vincent-jacques.net/chain.pem;

            location /turkshead {
              proxy_pass http://draw-turks-head-demo:80/;
            }
          }
    - ansible.builtin.copy:
        dest: web-server/conf.d/gabby.vincent-jacques.net.conf
        content: |
          server {
            listen 443 ssl;
            server_name gabby.vincent-jacques.net;

            ssl_certificate /etc/letsencrypt/live/gabby.vincent-jacques.net/fullchain.pem;
            ssl_certificate_key /etc/letsencrypt/live/gabby.vincent-jacques.net/privkey.pem;
            ssl_trusted_certificate /etc/letsencrypt/live/gabby.vincent-jacques.net/chain.pem;

            location / {
              proxy_pass http://gabby-demo:8080/;
            }
          }
    - community.docker.docker_compose:
        project_src: web-server
