- hosts: web_server
  become: yes
  gather_facts: no
  tasks:
    - ansible.builtin.apt:
        update_cache: true
        name:
          - docker.io
          - docker-compose
        state: present
    - ansible.builtin.user:
        name: ubuntu
        groups:
          - docker
        append: true

- hosts: web_server
  become: no
  gather_facts: no
  tasks:
    - ansible.builtin.file:
        path: web-server
        state: directory
    - ansible.builtin.file:
        path: web-server/conf.d
        state: directory
    - ansible.builtin.copy:
        dest: web-server/gabby-db-secrets.env
        src: web-server/gabby-db-secrets.env
    - ansible.builtin.copy:
        dest: web-server/gabby-backend-secrets.env
        src: web-server/gabby-backend-secrets.env
    - ansible.builtin.copy:
        dest: web-server/docker-compose.yml
        content: |
          services:
            fanout:
              image: jonasal/nginx-certbot:4-alpine
              ports:
                - "80:80"
                - "443:443"
              volumes:
                - ./50-copy-conf.sh:/docker-entrypoint.d/50-copy-conf.sh:ro
                - ./conf.d:/etc/nginx/conf.d.ro
                - ./letsencrypt:/etc/letsencrypt
              environment:
                - CERTBOT_EMAIL=letsencrypt.org@vincent-jacques.net
              depends_on:
                - gabby-frontend
                - gabby-backend
                - gabby-adminer

            draw-turks-head-demo:
              image: jacquev6/draw-turks-head-demo:20230310-150439

            # To upgrade Gabby's DB schema:
            # ./ssh.sh ubuntu@cloud
            # cd web-server
            # docker-compose exec --workdir /app/gabby gabby-backend alembic upgrade head
            gabby-frontend:
              image: jacquev6/gabby:20241003-153035-frontend
            gabby-backend:
              image: jacquev6/gabby:20241003-153035-backend
              environment:
                GABBY_ROOT_URL: https://gabby.vincent-jacques.net
                GABBY_ALLOWED_HOSTS: gabby.vincent-jacques.net
                GABBY_DATABASE_BACKUPS_URL: s3://jacquev6/gabby/prod/backups
                GABBY_MAIL_SENDER: "Vincent Jacques <vincent@vincent-jacques.net>"
              env_file:
                - gabby-backend-secrets.env
              depends_on:
                gabby-db:
                  condition: service_healthy
            gabby-adminer:
              image: adminer:4
              environment:
                ADMINER_DEFAULT_DB_DRIVER: pgsql
                ADMINER_DEFAULT_DB_HOST: gabby-db
                ADMINER_DEFAULT_DB_NAME: gabby
              depends_on:
                gabby-db:
                  condition: service_healthy
            gabby-db:
              image: postgres:15
              volumes:
                - gabby-db-data:/var/lib/postgresql/data:rw
              environment:
                POSTGRES_USER: gabby
                POSTGRES_DB: gabby
              env_file:
                - gabby-db-secrets.env
              healthcheck:
                test: [
                  "CMD",
                  "pg_isready",
                  "--timeout=0",
                  "--dbname=gabby",
                  "--username=gabby",
                ]
                start_period: 0s
                interval: 0.5s
                timeout: 1s
                retries: 10

          volumes:
            gabby-db-data:
    - ansible.builtin.copy:
        dest: web-server/50-copy-conf.sh
        content: |
          cp /etc/nginx/conf.d.ro/* /etc/nginx/conf.d/
        mode: "0755"
# @todo Use a trigger to reload the NGinx config changes
# In the mean time, run this after changing the NGinx config files:
#   ansible --inventory inventory.yml web_server -a 'bash -c "cd web-server; docker-compose up --force-recreate --detach"'
# (Just reloading config changes with `docker-compose exec fanout nginx -s reload` isn't enough when adding a new SSL domain
# because certificates are emitted during startup)
    - ansible.builtin.copy:
        dest: web-server/conf.d/www.jacquev6.net.conf
        content: |
          server {
            listen 443 ssl;
            server_name www.jacquev6.net;

            ssl_certificate /etc/letsencrypt/live/www.jacquev6.net/fullchain.pem;
            ssl_certificate_key /etc/letsencrypt/live/www.jacquev6.net/privkey.pem;
            ssl_trusted_certificate /etc/letsencrypt/live/www.jacquev6.net/chain.pem;

            return 301 https://jacquev6.net$request_uri;
          }
    - ansible.builtin.copy:
        dest: web-server/conf.d/cloud.jacquev6.net.conf
        content: |
          server {
            listen 443 ssl;
            server_name cloud.jacquev6.net;

            ssl_certificate /etc/letsencrypt/live/cloud.jacquev6.net/fullchain.pem;
            ssl_certificate_key /etc/letsencrypt/live/cloud.jacquev6.net/privkey.pem;
            ssl_trusted_certificate /etc/letsencrypt/live/cloud.jacquev6.net/chain.pem;

            location / {
              default_type text/plain;
              return 200 'OK';
            }
          }
    - ansible.builtin.copy:
        dest: web-server/conf.d/www.vincent-jacques.net.conf
        content: |
          server {
            listen 443 ssl;
            server_name www.vincent-jacques.net;

            ssl_certificate /etc/letsencrypt/live/www.vincent-jacques.net/fullchain.pem;
            ssl_certificate_key /etc/letsencrypt/live/www.vincent-jacques.net/privkey.pem;
            ssl_trusted_certificate /etc/letsencrypt/live/www.vincent-jacques.net/chain.pem;

            return 301 https://vincent-jacques.net$request_uri;
          }
    - ansible.builtin.copy:
        dest: web-server/conf.d/dyn.vincent-jacques.net.conf
        content: |
          server {
            listen 443 ssl;
            server_name dyn.vincent-jacques.net;

            ssl_certificate /etc/letsencrypt/live/dyn.vincent-jacques.net/fullchain.pem;
            ssl_certificate_key /etc/letsencrypt/live/dyn.vincent-jacques.net/privkey.pem;
            ssl_trusted_certificate /etc/letsencrypt/live/dyn.vincent-jacques.net/chain.pem;

            location /turkshead {
              proxy_pass http://draw-turks-head-demo:80/;
            }
          }
    - ansible.builtin.copy:
        dest: web-server/conf.d/gabby.vincent-jacques.net.conf
        content: |
          server {
            listen 443 ssl;
            server_name gabby.vincent-jacques.net;

            ssl_certificate /etc/letsencrypt/live/gabby.vincent-jacques.net/fullchain.pem;
            ssl_certificate_key /etc/letsencrypt/live/gabby.vincent-jacques.net/privkey.pem;
            ssl_trusted_certificate /etc/letsencrypt/live/gabby.vincent-jacques.net/chain.pem;

            location / {
              proxy_pass http://gabby-frontend/;
              proxy_redirect http://gabby-frontend/ https://$http_host/;
            }

            location /api/static/ {
              proxy_pass http://gabby-frontend/api/static/;
              proxy_set_header Host $http_host;
            }

            location /api/ {
              proxy_pass http://gabby-backend/api/;
              proxy_set_header Host $http_host;
            }

            location /api/adminer {
              proxy_pass http://gabby-adminer:8080/api/adminer;
              proxy_set_header Host $http_host;
            }
          }
    - community.docker.docker_compose:
        project_src: web-server
        remove_orphans: true
    - name: Backup Gabby DB
      ansible.builtin.cron:
        name: "Backup Gabby DB"
        minute: "42"
        user: ubuntu
        job: "cd web-server && docker-compose exec -T gabby-backend python -m gabby backup-database >last-gabby-db-backup.stdout 2>last-gabby-db-backup.stderr"
